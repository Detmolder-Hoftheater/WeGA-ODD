<?xml version="1.0" encoding="utf-8"?>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
   <title>ISO Schematron rules</title>
   <!-- This file generated 2020-10-28T12:25:35.243+01:00 by 'extract-isosch.xsl'. -->

<!-- ********************* -->
<!-- namespaces, declared: -->
<!-- ********************* -->


<!-- ********************* -->
<!-- namespaces, implicit: -->
<!-- ********************* -->
<ns prefix="eip-d1e10000" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10052" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10091" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10130" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10172" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10213" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10266" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10318" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10334" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10413" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10615" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10670" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10701" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10752" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e10814" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11009" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11322" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11389" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11425" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11480" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11497" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11523" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11546" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11567" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11657" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11687" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11729" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11784" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11822" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11863" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11925" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11951" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e11969" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12009" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12034" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12149" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12173" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12206" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12250" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12298" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12329" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12362" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12390" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12443" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12477" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12505" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12533" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12589" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12846" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12890" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12910" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12946" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e12977" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e13110" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e13154" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e13214" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e13250" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14180" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14230" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14290" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14322" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14340" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14394" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14420" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14499" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14515" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14562" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14592" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14622" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14701" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14798" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14846" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e14909" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15099" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15156" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15204" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15323" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15357" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15385" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15413" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15458" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15484" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15528" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15556" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15694" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15808" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e15850" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16019" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16090" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16180" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16213" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16336" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16411" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16493" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16567" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16631" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16706" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16777" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e16803" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e4350" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e4449" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e4465" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e4522" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8507" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8540" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8566" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8598" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8690" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8722" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8774" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8808" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8831" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8885" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8915" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e8936" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9007" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9098" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e90" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9127" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9153" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9213" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9245" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9276" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9307" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9375" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9412" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9436" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9500" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9538" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9590" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9641" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9660" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9829" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9881" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9914" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9943" uri="http://www.music-encoding.org/ns/mei"/>
   <ns prefix="eip-d1e9971" uri="http://www.music-encoding.org/ns/mei"/>

   <!-- ************ -->
<!-- constraints: -->
<!-- ************ -->
<pattern id="wegaWorks-data.ARTICULATION-constraint-warn_deprecated-1">
        <rule context="@artic">
          <assert role="warning"
                 test="not(contains(., 'marc-stacc')) and not(contains(., 'ten-stacc'))">"<value-of select="."/>" contains a deprecated value.</assert>
        </rule>
        <rule context="@artic.ges">
          <assert role="warning"
                 test="not(contains(., 'marc-stacc')) and not(contains(., 'ten-stacc'))">"<value-of select="."/>" contains a deprecated value.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-data.PLACEMENT-constraint-constrain_place-2">
        <rule context="@place">
          <assert test="not((some $token in tokenize(normalize-space(.),' ') satisfies              $token =('below','above','between','within')) and count(tokenize(normalize-space(.),' ')) gt 1)">Other values not permitted when 'above', 'below', 'between' or 'within' is
            present.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-data.STAFFREL-constraint-between_requires_adjacent_staves-3">
        <rule context="mei:*[@place eq 'between']">
          <assert test="count(tokenize(normalize-space(string(@staff)), '\s+')) = 2">The @staff
            attribute must contain 2 numerically-adjacent integer values.</assert>
          <let name="tokenizedStaff"
              value="tokenize(normalize-space(string(@staff)), '\s+')"/>
          <let name="maxValue"
              value="max((number($tokenizedStaff[1]), number($tokenizedStaff[2])))"/>
          <let name="minValue"
              value="min((number($tokenizedStaff[1]), number($tokenizedStaff[2])))"/>
          <assert test="$maxValue - $minValue = 1">Staves <value-of select="$minValue"/> and
            <value-of select="$maxValue"/> are not adjacent.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-att.notationType-notationsubtype-constraint-When_notationsubtype-4">
            <rule context="mei:*[@notationsubtype]">
              <assert test="@notationtype">An element with a notationsubtype attribute must have
                a notationtype attribute.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.augmentDots-dots-constraint-dots_attribute_requires_dur-5">
            <rule context="mei:*[@dots]">
              <assert test="@dur">An element with a dots attribute must also have a dur
                attribute.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.classed-class-constraint-check_classURI-6">
            <rule context="@class">
              <assert test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:category/@xml:id or matches($i, '^([a-z]+://|\.{1,2}/)')">The value in @class must either correspond to the @xml:id attribute of a category
                element or be an external URL.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.cleffing.log-constraint-clef_shape_requires_clef_line-7">
        <rule context="mei:*[matches(@clef.shape, '[FCG]')]">
          <assert test="@clef.line">An 'F', 'C', or 'G' clef requires that its position be
            specified.</assert>
        </rule>
        <rule context="mei:*[matches(@clef.shape, '(TAB|perc)')]">
          <assert test="@lines">A TAB or percussion clef requires that the number of lines be
            specified.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-att.clefShape-constraint-shape_requires_line-8">
        <rule context="mei:clef[matches(@shape, '[FCG]')]">
          <assert test="@line">When @shape is present, @line must also be
            specified.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-att.dataPointing-data-constraint-check_dataTarget-9">
            <rule context="@data">
              <assert role="warning" test="not(normalize-space(.) eq '')">@data attribute should
                have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:music]/@xml:id">The value in @data should correspond to the @xml:id attribute of a descendant of
                the music element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.metadataPointing-decls-constraint-check_declsTarget-10">
            <rule context="@decls">
              <assert role="warning" test="not(normalize-space(.) eq '')">@decls attribute
                should have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:meiHead]/@xml:id">Each value in @decls should correspond to the @xml:id attribute of an element
                within the metadata header.</assert>
              <assert test="every $i in tokenize(., '\s+') satisfies not(substring($i,2)=//mei:term/@xml:id)">No value in @decls should correspond to the @xml:id attribute of a classification
                term. Use @class for this purpose.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.extent-extent-constraint-check_extent-11">
            <rule context="@extent[matches(normalize-space(.), '^\d+(\.\d+)?$')]">
              <assert role="warning" test="../@unit">The @unit attribute is
                recommended.</assert>
            </rule>
            <rule context="@extent[matches(., '\d+(\.\d+)?\s')]">
              <assert role="warning" test="../@unit">Separation into value (@extent) and unit
                (@unit) is recommended.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.handIdent-hand-constraint-check_handTarget-12">
            <rule context="@hand">
              <assert role="warning" test="not(normalize-space(.) eq '')">@hand attribute should
                have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:hand/@xml:id">Each value in @hand should correspond to the @xml:id attribute of a hand
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.layer.log-def-constraint-check_defTarget_layer-13">
            <rule context="mei:layer/@def">
              <assert role="warning" test="not(normalize-space(.) eq '')">@def attribute should
                have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:layerDef/@xml:id">The value in @def should correspond to the @xml:id attribute of a layerDef
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.name-nymref-constraint-check_nymrefTarget-23">
            <rule context="@nymref">
              <assert role="warning" test="not(normalize-space(.) eq '')">@nymref attribute
                should have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">The
                value in @nymref should correspond to the @xml:id attribute of an
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.origin.timestamp.logical-origin.tstamp2-constraint-origin.tstamp2_requires_origin.tstamp-24">
            <rule context="mei:*[@origin.tstamp2]">
              <assert test="@origin.tstamp">When @origin.tstamp2 is used @origin.tstamp must
                also be present.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.plist-plist-constraint-check_plistTarget-27">
            <rule context="@plist">
              <assert role="warning" test="not(normalize-space(.) eq '')">@plist attribute
                should have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">Each
                value in @plist should correspond to the @xml:id attribute of an
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.ranging-confidence-constraint-check_confidence-28">
            <rule context="mei:*[@confidence]">
              <assert test="@min and @max">The attributes @min and @max are required when
                @confidence is present.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.responsibility-resp-constraint-check_respTarget-29">
            <rule context="@resp">
              <assert role="warning" test="not(normalize-space(.) eq '')">@resp attribute should
                have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*[ancestor::mei:meiHead]/@xml:id">The value in @resp should correspond to the @xml:id attribute of an element within
                the metadata header.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.staff.log-def-constraint-check_defTarget_staff-31">
            <rule context="mei:staff/@def">
              <assert role="warning" test="not(normalize-space(.) eq '')">@def attribute should
                have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:staffDef/@xml:id">The value in @def should correspond to the @xml:id attribute of a staffDef
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.startEndId-endid-constraint-check_endidTarget-32">
            <rule context="@endid">
              <assert role="warning" test="not(normalize-space(.) eq '')">@endid attribute
                should have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">The
                value in @endid should correspond to the @xml:id attribute of an
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-att.startId-startid-constraint-check_startidTarget-33">
            <rule context="@startid">
              <assert role="warning" test="not(normalize-space(.) eq '')">@startid attribute
                should have content.</assert>
              <assert role="warning"
                 test="every $i in tokenize(., '\s+') satisfies substring($i,2)=//mei:*/@xml:id">The
                value in @startid should correspond to the @xml:id attribute of an
                element.</assert>
            </rule>
          </pattern>
   <pattern id="wegaWorks-annot-constraint-Check_annot_data-34">
        <rule context="mei:annot[@data]">
          <assert test="ancestor::mei:notesStmt">The @data attribute may only occur on an
            annotation within the notesStmt element.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-clef-constraint-Clef_position_lines-35">
        <rule context="mei:clef[ancestor::mei:staffDef[@lines]]">
          <let name="thisstaff" value="ancestor::mei:staffDef/@n"/>
          <assert test="number(@line) &lt;= number(ancestor::mei:staffDef[@n=$thisstaff and @lines][1]/@lines)">The clef position must be less than or equal to the number of lines of an ancestor
            staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-clef-constraint-Clef_position_nolines-36">
        <rule context="mei:clef[ancestor::mei:staffDef[not(@lines)]]">
          <let name="thisstaff" value="ancestor::mei:staffDef/@n"/>
          <assert test="number(@line) &lt;= number(preceding::mei:staffDef[@n=$thisstaff and @lines][1]/@lines)">The clef position must be less than or equal to the number of lines of a preceding
            staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-dir-constraint-dir_start-type_attributes_required-37">
        <rule context="mei:dir[not(ancestor::mei:syllable)]">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-dynam-constraint-dynam_start-type_attributes_required-38">
        <rule context="mei:dynam">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must have one of
            the attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-dynam-constraint-dynam_end-type_attributes-39">
        <rule context="mei:dynam[@val2]">
          <assert test="@dur or @dur.ges or @endid or @tstamp2">When @val2 is present, either
            @dur, @dur.ges, @endid, or @tstamp2 must also be present.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-mei-constraint-Check_staff-40">
        <rule context="mei:*[@staff]">
          <assert test="every $i in tokenize(normalize-space(@staff), '\s+') satisfies $i=//mei:staffDef/@n">The values in @staff must correspond to @n attribute of a staffDef
            element.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-name-constraint-nameParts-41">
        <rule context="mei:name">
          <assert role="warning" test="not(mei:geogName or mei:persName or mei:corpName)">Recommended practice is to use name elements to capture sub-parts of a generic
            name.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-respStmt-constraint-check_respStmt-42">
        <rule context="mei:respStmt[not(ancestor::mei:change)]">
          <assert test="(mei:resp and (mei:name or mei:corpName or mei:persName)) or              count(mei:*[@role]) = count(mei:*) and count(mei:*) &gt; 0"
                 role="warning">At least one element pair (a resp element and a name-like element) is
            recommended. Alternatively, each name-like element may have a @role
            attribute.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-rest-constraint-Check_restline-43">
        <rule context="mei:rest[@line]">
          <let name="thisstaff" value="ancestor::mei:staff/@n"/>
          <assert test="number(@line) &lt;= number(preceding::mei:staffDef[@n=$thisstaff and @lines][1]/@lines)">The value of @line must be less than or equal to the number of lines on the
            staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-section-constraint-Check_sectionexpansion-44">
        <rule context="mei:section[mei:expansion]">
          <assert test="descendant::mei:section|descendant::mei:ending|descendant::mei:rdg">A
            section containing an expansion element must have descendant section, ending, or rdg
            elements.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staff-constraint-checkStaff_n-45">
        <rule context="mei:staff[@n]">
          <let name="thisstaff" value="@n"/>
          <assert test="preceding::mei:staffDef[@n=$thisstaff] or preceding::mei:staff[@n=$thisstaff]/mei:staffDef or mei:staffDef">There must be a preceding staffDef with a matching value of @n, a preceding staff with
            a matching @n value containing a staffDef, or a staffDef child element.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_staffDefn-46">
        <rule context="mei:staffDef[not(ancestor::mei:staff)]">
          <let name="thisstaff" value="@n"/>
          <assert test="@n">StaffDef must have an n attribute.</assert>
          <assert test="@lines or preceding::mei:staffDef[@n=$thisstaff and @lines]"> Either
            @lines must be present or a preceding staffDef with the same value for @n and @lines
            must exist.</assert>
          <assert test="count(mei:clef) + count(mei:clefGrp) &lt; 2">Only one clef or clefGrp is
            permitted.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_ancestor_staff-47">
        <rule context="mei:staffDef[ancestor::mei:staff and @n]">
          <let name="thisstaff" value="@n"/>
          <assert test="ancestor::mei:staff/@n eq $thisstaff">@n must have the same value as the
            current staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_ancestor_staff_lines-48">
        <rule context="mei:staffDef[ancestor::mei:staff and not(@n)]">
          <let name="thisstaff" value="ancestor::mei:staff/@n"/>
          <assert test="@lines or preceding::mei:staffDef[@n=$thisstaff and @lines]"> Either
            @lines must be present or a preceding staffDef with matching @n value and @lines must
            exist.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_clef_position_staffDef-49">
        <rule context="mei:staffDef[@clef.line and @lines]">
          <assert test="number(@clef.line) &lt;= number(@lines)">The clef position must be less
            than or equal to the number of lines on the staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_clef_position_staffDef_nolines-50">
        <rule context="mei:staffDef[@clef.line and not(@lines)]">
          <let name="thisstaff" value="@n"/>
          <let name="stafflines"
              value="preceding::mei:staffDef[@n=$thisstaff and @lines][1]/@lines"/>
          <assert test="number(@clef.line) &lt;= number($stafflines)">The clef position must be
            less than or equal to the number of lines on the staff.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_tab_strings_lines-51">
        <rule context="mei:staffDef[@tab.strings and @lines]">
          <let name="countTokens"
              value="count(tokenize(normalize-space(@tab.strings), '\s'))"/>
          <assert test="$countTokens = @lines">The tab.strings attribute must have the same
            number of values as there are staff lines.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-staffDef-constraint-Check_tab_strings_nolines-52">
        <rule context="mei:staffDef[@tab.strings and not(@lines)]">
          <let name="countTokens"
              value="count(tokenize(normalize-space(@tab.strings), '\s'))"/>
          <let name="thisstaff" value="@n"/>
          <assert test="$countTokens = preceding::mei:staffDef[@n=$thisstaff and @lines][1]/@lines">The
            tab.strings attribute must have the same number of values as there are staff
            lines.</assert>
        </rule>
      </pattern>
        <pattern>
          <rule context="mei:staffDef[@lines.color and @lines]">
            <let name="countTokens"
              value="count(tokenize(normalize-space(@lines.color), '\s'))"/>
            <assert test="$countTokens = 1 or $countTokens = @lines">The lines.color attribute
              must have either 1) a single value or 2) the same number of values as there are staff
              lines.</assert>
          </rule>
          <rule context="mei:staffDef[@lines.color and not(@lines)]">
            <let name="countTokens"
              value="count(tokenize(normalize-space(@lines.color), '\s'))"/>
            <let name="thisstaff" value="@n"/>
            <assert test="$countTokens = 1 or $countTokens = preceding::mei:staffDef[@n=$thisstaff and @lines][1]/@lines">The lines.color attribute must have either 1) a single value or 2) the same number of
              values as there are staff lines.</assert>
          </rule>
        </pattern>
      
        <pattern>
          <rule context="mei:staffDef[@ppq][ancestor::mei:scoreDef[@ppq]]">
            <let name="staffPPQ" value="@ppq"/>
            <let name="scorePPQ" value="ancestor::mei:scoreDef[@ppq][1]/@ppq"/>
            <assert test="($scorePPQ mod $staffPPQ) = 0">The value of ppq must be a factor of
              the value of ppq on an ancestor scoreDef.</assert>
          </rule>
        </pattern>
      
        <pattern>
          <rule context="mei:staffDef[@ppq][preceding::mei:scoreDef[@ppq]]">
            <let name="staffPPQ" value="@ppq"/>
            <let name="scorePPQ" value="preceding::mei:scoreDef[@ppq][1]/@ppq"/>
            <assert test="($scorePPQ mod $staffPPQ) = 0">The value of ppq must be a factor of
              the value of ppq on a preceding scoreDef.</assert>
          </rule>
        </pattern>
      <pattern id="wegaWorks-staffGrp-constraint-Check_staffGrp_unique_staff_n_values-56">
        <rule context="mei:staffGrp">
          <let name="countstaves" value="count(descendant::mei:staffDef)"/>
          <let name="countuniqstaves"
              value="count(distinct-values(descendant::mei:staffDef/@n))"/>
          <assert test="$countstaves eq $countuniqstaves">Each staffDef must have a unique value
            for the n attribute.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tempo-constraint-tempo_in_header_disallow_most_attrs-57">
        <rule context="mei:tempo[not(ancestor::mei:score or ancestor::mei:part)]">
          <assert test="not(@*[name() != 'analog' and name() != 'class' and name() != 'label' and                name() != 'mm' and name() != 'mm.dots' and name() != 'translit' and                name() != 'type' and name() != 'mm.unit' and name() != 'n' and name() != 'xml:base' and                name() != 'xml:id' and name() != 'xml:lang'])">Only analog, class, label, mm, mm.dots, mm.unit, n, translit, type, xml:base, xml:id,
            and xml:lang attributes are allowed when tempo is not a descendant of a score or
            part.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tempo-constraint-tempo_start-type_attributes_required-58">
        <rule context="mei:tempo[not(ancestor::mei:syllable) and not(ancestor::mei:work) and not(ancestor::mei:expression) and not(count(ancestor::mei:*) = 0)]">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-term-constraint-Check_term_dataTarget-59">
        <rule context="mei:term[@data]">
          <assert test="ancestor::mei:classification">The @data attribute may only occur on a
            term which is a descendant of a classification element.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-change-constraint-check_change-60">
        <rule context="mei:change">
          <assert test="@isodate or mei:date">The date of the change must be recorded in an
            isodate attribute or date element.</assert>
          <assert test="@resp or mei:respStmt[mei:name or mei:corpName or mei:persName]"
                 role="warning">It is recommended that the agent responsible for the change be recorded
            in a resp attribute or in a name, corpName, or persName element in the respStmt
            element.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-contents-constraint-checkContentsLabels-61">
        <rule context="mei:contents[mei:label]">
          <assert role="warning" test="count(mei:label) = count(mei:contentItem)">When labels
            are used, usually each content item has one.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-handList-constraint-checkHandListLabels-62">
        <rule context="mei:handList[mei:label]">
          <assert role="warning" test="count(mei:label) = count(mei:hand)">When labels are used,
            usually each hand has one.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-history-constraint-history_restriction-63">
        <rule context="mei:history[parent::mei:work or parent::mei:expression]">
          <assert test="not(mei:acquisition or mei:provenance)">The acquisition and provenance
            elements are not permitted in the work or expression context.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-incipCode-constraint-Check_incipCode_form_mimetype-64">
        <rule context="mei:incipCode">
          <assert test="@form or @mimetype">incipCode must have a form or mimetype
            attribute.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-source-constraint-id-check-66">
                                <rule context="mei:source">
                                    <assert test="@xml:id or ancestor::mei:source"> Am
                                        Wurzelelement muss eine XML-ID angegeben sein. </assert>
                                </rule>
                            </pattern>
   <pattern id="wegaWorks-termList-constraint-checkTermListLabels-68">
        <rule context="mei:termList[mei:label]">
          <assert role="warning" test="count(mei:label) = count(mei:term)">When labels are used,
            usually each term has one.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-work-constraint-id-check-69">
                                <rule context="mei:source">
                                    <assert test="@xml:id or ancestor::mei:source"> Am
                                        Wurzelelement muss eine XML-ID angegeben sein. </assert>
                                </rule>
                            </pattern>
   <pattern id="wegaWorks-beam-constraint-When_not_copyof_beam_content-70">
        <rule context="mei:beam[not(@copyof)]">
          <assert test="count(descendant::*[local-name()='note' or local-name()='rest' or               local-name()='chord' or local-name()='space']) &gt; 1">A beam without a copyof attribute must have at least 2 note, rest, chord, or space
            descendants.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-beamSpan-constraint-beamspan_start-_and_end-type_attributes_required-71">
        <rule context="mei:beamSpan">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-fermata-constraint-fermata_start-type_attributes_required-72">
        <rule context="mei:fermata">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-hairpin-constraint-hairpin_start-_and_end-type_attributes_required-73">
        <rule context="mei:hairpin">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-octave-constraint-octave_start-_and_end-type_attributes_required-74">
        <rule context="mei:octave">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-slur-constraint-slur_start-_and_end-type_attributes_required-75">
        <rule context="mei:slur">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-slur-constraint-slur_containing_curve-76">
        <rule context="mei:slur[mei:curve[@bezier or @bulge or @curvedir or @lform or @lwidth or              @ho or @startho or @endho or @to or @startto or @endto or @vo or @startvo or @endvo or              @x or @y or @x2 or @y2]]">
          <assert test="not(@bezier or @bulge or @curvedir or @lform or @lwidth or @ho or @startho or                @endho or @to or @startto or @endto or @vo or @startvo or @endvo or @x or @y or @x2 or @y2)"
                 role="warning">The visual attributes of the slur (@bezier, @bulge, @curvedir, @lform,
            @lwidth, @ho, @startho, @endho, @to, @startto, @endto, @vo, @startvo, @endvo, @x, @y,
            @x2, and @y2) will be overridden by visual attributes of the contained curve
            elements.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tie-constraint-tie_start-_and_end-type_attributes_required-77">
        <rule context="mei:tie">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tie-constraint-tie_containing_curve-78">
        <rule context="mei:tie[mei:curve[@bezier or @bulge or @curvedir or @lform or @lwidth or              @ho or @startho or @endho or @to or @startto or @endto or @vo or @startvo or              @endvo or @x or @y or @x2 or @y2]]">
          <assert test="not(@bezier or @bulge or @curvedir or @lform or @lwidth or @ho or @startho or                @endho or @to or @startto or @endto or @vo or @startvo or @endvo or @x or @y or @x2 or @y2)"
                 role="warning">The visual attributes of the tie (@bezier, @bulge, @curvedir, @lform,
            @lwidth, @ho, @startho, @endho, @to, @startto, @endto, @vo, @startvo, @endvo, @x, @y,
            @x2, and @y2) will be overridden by visual attributes of the contained curve
            elements.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tuplet-constraint-When_not_copyof_tuplet_content-79">
        <rule context="mei:tuplet[not(@copyof)]">
          <assert test="count(descendant::*[local-name()='note' or local-name()='rest' or               local-name()='chord']) &gt; 1">A tuplet without a copyof attribute must have at least 2 note, rest, or chord
            descendants.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-tupletSpan-constraint-tupletSpan_start-_and_end-type_attributes_required-80">
        <rule context="mei:tupletSpan">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-trill-constraint-trill_start-type_attributes_required-81">
        <rule context="mei:trill">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-turn-constraint-turn_start-type_attributes_required-82">
        <rule context="mei:turn">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-list-constraint-list_type_constraint-83">
        <rule context="mei:list[contains(@type,'gloss')]">
          <assert test="count(mei:label) = count(mei:li)">In a list of type "gloss" all items
            must be immediately preceded by a label.</assert>
        </rule>
      </pattern>
   <pattern id="wegaWorks-cpMark-constraint-cpMark_start-_and_end-type_attributes_required-84">
        <rule context="mei:cpMark">
          <assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of the
            attributes: startid, tstamp, tstamp.ges or tstamp.real</assert>
          <assert test="@dur or @dur.ges or @endid or @tstamp2">Must have one of the attributes:
            dur, dur.ges, endid, or tstamp2</assert>
        </rule>
      </pattern>
</schema>
