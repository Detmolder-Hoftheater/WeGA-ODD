<?xml version="1.0" encoding="utf-8"?>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
   <title>ISO Schematron rules</title>
   <!-- This file generated 2014-12-17T11:06:33.571+01:00 by 'extract-isosch.xsl'. -->

<!-- ********************* -->
<!-- namespaces, declared: -->
<!-- ********************* -->


<!-- ********************* -->
<!-- namespaces, implicit: -->
<!-- ********************* -->
<ns prefix="tei" uri="http://www.tei-c.org/ns/1.0"/>

   <!-- ************ -->
<!-- constraints: -->
<!-- ************ -->
<pattern id="wegaBiblio-att.datable-calendar-constraint-calendar-1">
          <rule context="tei:*[@calendar]">
            <assert test="string-length(.) gt 0">
@calendar indicates the system or calendar to which the date represented by the content of this element
belongs, but this <name/> element has no textual content.</assert>
          </rule>
        </pattern>
   <pattern id="wegaBiblio-att.typed-constraint-subtypeTyped-2">
      <rule context="*[@subtype]">
        <assert test="@type">The <name/> element should not be categorized in detail with @subtype
 unless also categorized in general with @type</assert>
      </rule>
    </pattern>
   <pattern id="wegaBiblio-rs-constraint-rs-typeNkey-3">
                    <rule context="tei:rs[@type][@key]">
                        <assert test="                             (matches(@key, '^A00\d{4}$') and @type='person') or                             (matches(@key, '^A02\d{4}$') and @type='work') or                             (matches(@key, '^A03\d{4}$') and @type='writing') or                             (matches(@key, '^A04\d{4}$') and @type='letter') or                             (matches(@key, '^A06\d{4}$') and @type='diaryDay') or                             (matches(@key, '^(A00\d{4}\s)*A00\d{4}$') and @type='persons') or                             (matches(@key, '^(A02\d{4}\s)*A02\d{4}$') and @type='works') or                             (matches(@key, '^(A03\d{4}\s)*A03\d{4}$') and @type='writings') or                             (matches(@key, '^(A04\d{4}\s)*A04\d{4}$') and @type='letters') or                             (matches(@key, '^(A05\d{4}\s)*A05\d{4}$') and @type='news') or                             (matches(@key, '^(A06\d{4}\s)*A06\d{4}$') and @type='diaryDays') or                             (matches(@key, '^(A11\d{4}\s)*A11\d{4}$') and @type='biblio')">Type mismatch: The value for @type must be in accordance with the given ID in @key</assert>
                    </rule>
                </pattern>
   <pattern id="wegaBiblio-date-constraint-dateHeuristics1-4">
      <rule context="tei:date">
                    <report test="(@notBefore gt @notAfter) and not(starts-with(@notBefore, '-'))">value of notBefore greater than notAfter</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-date-constraint-dateHeuristics2-5">
      <rule context="tei:date">
                    <report test="(@notBefore lt @notAfter) and starts-with(@notBefore, '-')">value of notBefore smaller than notAfter</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-date-constraint-dateHeuristics3-6">
      <rule context="tei:date">
                    <report test="(@from or @to) and (@when or @notAfter or @notBefore)">cooccurence of date and duration attributes</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-date-constraint-dateHeuristics4-7">
      <rule context="tei:date">
                    <report test="@when and (@notAfter or @notBefore)">cooccurence of exact and uncertain date attributes</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-date-constraint-dateHeuristics5-8">
      <rule context="tei:date">
                    <assert test="@when or @notBefore or @notAfter or @from or @to or @cert='unknown' or matches(., '0000|o\.J\.|unknown') or ancestor::tei:text">tei:date benötigt ein Attribut @when, @notBefore o.ä.</assert>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-ref-constraint-refAtts-9">
      <rule context="tei:ref">
         <report test="@target and @cRef">Only one of the
	attributes @target' and @cRef' may be supplied on <name/>
         </report>
      </rule>
   </pattern>
   <pattern id="wegaBiblio-analytic-constraint-analyticTitle-10">
      <rule context="tei:analytic">
                    <report test="tei:title/@level and not(tei:title/@level='a')">a title within analytic must have a @level='a'</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-monogr-constraint-monogrTitle-11">
      <rule context="tei:monogr">
                    <report test="tei:title/@level and not(tei:title/@level=('j','m','u'))">a title within monogr must have a @level='j|m'</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-series-constraint-seriesTitle-12">
      <rule context="tei:series">
                    <report test="tei:title/@level and not(tei:title/@level='s')">a title within series must have a @level='s'</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-author-sameAs-constraint-sameAs-reference-13">
                            <rule context="tei:*[@sameAs]">
                                <assert test="id(substring(@sameAs,2)) or starts-with(@sameAs, 'wega:')">There must be an element with the xml:id = "<value-of select="substring(@sameAs,2)"/>" which is the target of this @sameAs.</assert>
                            </rule>
                        </pattern>
   <pattern id="wegaBiblio-title-constraint-duplicate-title-14">
                    <rule context="tei:title[following-sibling::tei:title]">
                        <let name="level" value="@level"/>
                        <let name="type" value="string(@type)"/> 
                        <let name="lang" value="string(@xml:lang)"/>
                        <report test="following-sibling::tei:title[@level = $level][string(@xml:lang) = $lang][string(@type) = $type]">Following title without differing @type or xml:lang attribute</report>
                    </rule>
                </pattern>
   <pattern id="wegaBiblio-title-constraint-punctuation-mark-15">
      <rule context="tei:title">
                    <report test="matches(normalize-space(self::tei:title), '[\.,;]$') and not(matches(normalize-space(self::tei:title), '((\p{Lu})|(\setc)|(\sal)|([\s\.]a)|(\sBl)|(\sAufl))\.$'))">Found a non-valid punctuation mark at the end of <name/> 
         </report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-imprint-constraint-duplicate-biblScope-type-16">
      <rule context="tei:imprint">
                    <report test="count(distinct-values(tei:biblScope/@type)) ne count(tei:biblScope/@type)">duplicate value for biblScope</report>
                </rule>
   </pattern>
   <pattern id="wegaBiblio-constraint-whitespaceOnlyContent-17">
                <rule context="tei:surname | tei:forename | tei:persName | tei:author[not(@sameAs)] | tei:occupation | tei:settlement | tei:country | tei:region | tei:rs | tei:workName | tei:characterName | tei:hi[not(.//tei:gap)] | tei:head | tei:note[not(@type='part')] | tei:placeName | tei:title">
                    <report test="normalize-space(.) = ''">
            <name/> has whitespace only content</report>
                </rule>
            </pattern>
   <pattern id="wegaBiblio-constraint-elementStartsWithWhitespace-18">
                <rule context="tei:surname | tei:forename | tei:persName[not(@type)] | tei:author | tei:occupation | tei:settlement | tei:country | tei:region | tei:rs | tei:workName | tei:characterName | tei:hi | tei:placeName[not(parent::tei:address or parent::tei:birth or parent::tei:death)]">
                    <report test="matches(.,'^\s')">whitespace at the beginning of element <name/>
         </report>
                </rule>
            </pattern>
   <pattern id="wegaBiblio-att.wega.rend-constraint-underline-n-19">
                    <rule context="*:hi[@n] | *:rend[@n]">
                        <report test="@rend ne 'underline'">The @n-attribute is only supported in combination with @rend='underline'</report>
                    </rule>
                </pattern>
</schema>
